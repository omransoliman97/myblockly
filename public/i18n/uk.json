{
  "title": "Будуйте з Блоків. Вчіться на Практиці.",
  "subtitle": "Створюйте програми візуально за допомогою Blockly. Змінюйте мови, перемикайте темний режим та експортуйте свої проекти одним клацанням.",
  "openEditor": "Відкрити редактор",
  "exploreFeatures": "Дослідити функції",
  "features": [
    "Перетягування блоків",
    "Попередній перегляд коду (JS/Python/PHP)",
    "Темні/Світлі теми",
    "Імпорт/Експорт XML"
  ],
  "language": "Мова",
  "theme": "Тема",
  "runProject": "Запустити проект",
  "loadProject": "Завантажити проект",
  "saveProject": "Зберегти проект",
  "discardAll": "Відкинути все",
  "confirmDiscard": "Відкинути всі блоки? Цю дію не можна скасувати.",
  "nav": {
    "menu": "Меню навігації",
    "home": "Головна",
    "editor": "Редактор",
    "docs": "Документація",
    "about": "Про нас",
    "donation": "Пожертва",
    "contact": "Контакти",
    "exercises": "Вправи",
    "close": "Закрити меню"
  },
  "docs": {
      "title": "Документація MyBlockly",
      "subtitle": "Дізнайтеся про всі доступні блоки та їх використання у ваших проектах.",
      "home": "Головна",
      "editor": "Редактор",
      "docs": "Документація",
      "categories": "Категорії",
      "visualBlock": "Візуальний блок:",
      "copyXML": "Копіювати XML",
      "showXMLCode": "Показати XML код",
      "generatedCode": "Згенерований код:",
      "example": "Приклад:",
      "couldNotRenderBlock": "Не вдалося відобразити блок",
      "loadingBlock": "Завантаження блоку...",
      "blockCategories": {
        "logic": "Логіка",
        "loops": "Цикли",
        "math": "Математика",
        "variables": "Змінні",
        "functions": "Функції",
        "lists": "Списки",
        "text": "Текст"
      },
      "blocks": {
        "logic": {
          "if": {
            "name": "якщо",
            "description": "Виконує код, якщо умова істинна",
            "code": "if (умова) {\n  // код для виконання\n}",
            "example": "Перевірити, чи число додатне"
          },
          "ifElse": {
            "name": "якщо-інакше",
            "description": "Виконує один блок коду, якщо умова істинна, та інший - якщо хибна",
            "code": "if (умова) {\n  // код якщо істина\n} else {\n  // код якщо хиба\n}"
          },
          "comparison": {
            "name": "порівняння",
            "description": "Порівнює два значення",
            "code": "a == b  // дорівнює\na != b  // не дорівнює\na < b   // менше ніж\na > b   // більше ніж\na <= b  // менше або дорівнює\na >= b  // більше або дорівнює"
          },
          "logicalOperators": {
            "name": "логічні оператори",
            "description": "Комбінує кілька умов",
            "code": "умова1 && умова2  // І\nумова1 || умова2  // АБО\n!умова             // НЕ"
          },
          "boolean": {
            "name": "булевий",
            "description": "Значення Істина або Хиба",
            "code": "true\nfalse"
          },
          "null": {
            "name": "null",
            "description": "Представляє порожнє або неіснуюче значення",
            "code": "null"
          },
          "ternary": {
            "name": "тернарний оператор",
            "description": "Повертає одне значення, якщо умова істинна, та інше - якщо хибна",
            "code": "умова ? значенняЯкщоИстина : значенняЯкщоХиба"
          }
        },
        "loops": {
          "repeat": {
            "name": "повторити",
            "description": "Повторює код вказану кількість разів",
            "code": "for (let i = 0; i < разів; i++) {\n  // код для повторення\n}"
          },
          "while": {
            "name": "поки",
            "description": "Повторює код, поки умова істинна",
            "code": "while (умова) {\n  // код для повторення\n}"
          },
          "repeatUntil": {
            "name": "повторювати доти",
            "description": "Повторює код, доки умова не стане істинною",
            "code": "do {\n  // код для повторення\n} while (!умова);"
          },
          "countWith": {
            "name": "лічильник",
            "description": "Цикл з лічильною змінною від початку до кінця",
            "code": "for (let i = 1; i <= 10; i++) {\n  // код для повторення\n}"
          },
          "forEach": {
            "name": "для кожного",
            "description": "Перебирає елементи у списку",
            "code": "for (let елемент of список) {\n  // код для виконання для кожного елементу\n}"
          },
          "breakOutOfLoop": {
            "name": "вийти з циклу",
            "description": "Виходить з поточного циклу",
            "code": "break;"
          },
          "continueLoop": {
            "name": "продовжити цикл",
            "description": "Переходить до наступної ітерації циклу",
            "code": "continue;"
          }
        },
        "math": {
          "number": {
            "name": "число",
            "description": "Числове значення",
            "code": "42"
          },
          "arithmetic": {
            "name": "арифметика",
            "description": "Основні арифметичні операції",
            "code": "a + b  // додавання\na - b  // віднімання\na * b  // множення\na / b  // ділення\na % b  // modulo (остача)"
          },
          "mathFunctions": {
            "name": "математичні функції",
            "description": "Загальні математичні функції",
            "code": "Math.abs(x)     // абсолютне значення\nMath.sqrt(x)    // квадратний корінь\nMath.pow(x, y)  // x у степені y\nMath.round(x)   // округлення до найближчого цілого\nMath.random()   // випадкове число між 0 та 1"
          },
          "trigFunctions": {
            "name": "тригонометричні функції",
            "description": "Тригонометричні функції",
            "code": "Math.sin(x)\nMath.cos(x)\nMath.tan(x)\nMath.asin(x)\nMath.acos(x)\nMath.atan(x)"
          },
          "constants": {
            "name": "константи",
            "description": "Математичні константи",
            "code": "Math.PI\nMath.E\nMath.SQRT2\nMath.SQRT1_2"
          },
          "numberProperty": {
            "name": "властивості числа",
            "description": "Перевіряє властивості числа",
            "code": "isEven(x)\nisOdd(x)\nisPrime(x)\nisWhole(x)\nisPositive(x)\nisNegative(x)"
          },
          "round": {
            "name": "округлення",
            "description": "Округлює число",
            "code": "Math.round(x)  // округлити\nMath.ceil(x)   // округлити вгору\nMath.floor(x)  // округлити вниз"
          },
          "constrain": {
            "name": "обмежити",
            "description": "Обмежує число в межах діапазону",
            "code": "Math.max(низько, Math.min(високо, x))"
          },
          "randomInteger": {
            "name": "випадкове ціле",
            "description": "Генерує випадкове ціле число між двома значеннями",
            "code": "Math.floor(Math.random() * (макс - мін + 1)) + мін"
          },
          "randomFraction": {
            "name": "випадковий дріб",
            "description": "Генерує випадкове число між 0 та 1",
            "code": "Math.random()"
          }
        },
        "variables": {
          "createVariable": {
            "name": "створити змінну",
            "description": "Створює нову змінну",
            "code": "let імʼяЗмінної = значення;"
          },
          "setVariable": {
            "name": "встановити змінну",
            "description": "Змінює значення змінної",
            "code": "імʼяЗмінної = новеЗначення;"
          },
          "getVariable": {
            "name": "отримати змінну",
            "description": "Отримує значення змінної",
            "code": "імʼяЗмінної"
          }
        },
        "functions": {
          "defineFunction": {
            "name": "визначити функцію",
            "description": "Створює багаторазову функцію",
            "code": "function імʼяФункції(параметр1, параметр2) {\n  // тіло функції\n  return результат;\n}"
          },
          "callFunction": {
            "name": "викликати функцію",
            "description": "Виконує функцію",
            "code": "імʼяФункції(аргумент1, аргумент2);"
          },
          "returnValue": {
            "name": "повернути значення",
            "description": "Повертає значення з функції",
            "code": "return значення;"
          }
        },
        "lists": {
          "createEmptyList": {
            "name": "створити порожній список",
            "description": "Створює новий порожній список",
            "code": "let мійСписок = [];"
          },
          "createList": {
            "name": "створити список",
            "description": "Створює новий список з елементами",
            "code": "let мійСписок = [елемент1, елемент2, елемент3];"
          },
          "createListWith": {
            "name": "створити список з",
            "description": "Створює список з повторюваним елементом",
            "code": "Array(кількість).fill(елемент)"
          },
          "listLength": {
            "name": "довжина списку",
            "description": "Отримує кількість елементів у списку",
            "code": "мійСписок.length"
          },
          "listIsEmpty": {
            "name": "список порожній",
            "description": "Перевіряє, чи список не має елементів",
            "code": "мійСписок.length === 0"
          },
          "findItemInList": {
            "name": "знайти елемент у списку",
            "description": "Знаходить позицію елемента у списку",
            "code": "мійСписок.indexOf(елемент)\nмійСписок.lastIndexOf(елемент)"
          },
          "getItem": {
            "name": "отримати елемент",
            "description": "Отримує елемент зі списку за індексом",
            "code": "let елемент = мійСписок[індекс];  // індекс починається з 0"
          },
          "setItem": {
            "name": "встановити елемент",
            "description": "Змінює значення елемента у списку",
            "code": "мійСписок[індекс] = новеЗначення;"
          },
          "getAndRemoveItem": {
            "name": "отримати та видалити елемент",
            "description": "Отримує елемент і видаляє його зі списку",
            "code": "let елемент = мійСписок.splice(індекс, 1)[0];"
          },
          "removeItem": {
            "name": "видалити елемент",
            "description": "Видаляє елемент зі списку",
            "code": "мійСписок.splice(індекс, 1);"
          },
          "getSublist": {
            "name": "отримати підсписок",
            "description": "Отримує частину списку",
            "code": "мійСписок.slice(початок, кінець)"
          },
          "splitTextIntoList": {
            "name": "розділити текст на список",
            "description": "Перетворює текст на список шляхом розділення",
            "code": "текст.split(\",\")"
          },
          "joinListIntoText": {
            "name": "об'єднати список у текст",
            "description": "Перетворює список на текст шляхом об'єднання",
            "code": "мійСписок.join(\",\")"
          },
          "sortList": {
            "name": "сортувати список",
            "description": "Сортує список",
            "code": "мійСписок.sort()  // числове зростання\nмійСписок.sort().reverse()  // числове спадання\nмійСписок.sort()  // алфавітне зростання\nмійСписок.sort().reverse()  // алфавітне спадання"
          },
          "reverseList": {
            "name": "обернути список",
            "description": "Обертає порядок елементів у списку",
            "code": "мійСписок.reverse()"
          }
        },
        "text": {
          "createText": {
            "name": "створити текст",
            "description": "Створює текстовий рядок",
            "code": "let текст = \"Привіт, світе!\";"
          },
          "joinText": {
            "name": "об'єднати текст",
            "description": "Комбінує текстові рядки",
            "code": "let обʼєднаний = текст1 + текст2;"
          },
          "appendText": {
            "name": "додати текст",
            "description": "Додає текст в кінець змінної",
            "code": "текст += \"більше тексту\";"
          },
          "textLength": {
            "name": "довжина тексту",
            "description": "Отримує довжину текстового рядка",
            "code": "текст.length"
          },
          "textIsEmpty": {
            "name": "текст порожній",
            "description": "Перевіряє, чи текст порожній",
            "code": "текст.length === 0"
          },
          "findText": {
            "name": "знайти текст",
            "description": "Знаходить позицію тексту в тексті",
            "code": "текст.indexOf(\"пошук\")\nтекст.lastIndexOf(\"пошук\")"
          },
          "getCharacter": {
            "name": "отримати символ",
            "description": "Отримує конкретний символ з тексту",
            "code": "текст.charAt(індекс)"
          },
          "substring": {
            "name": "підрядок",
            "description": "Отримує частину тексту",
            "code": "текст.substring(початок, кінець)"
          },
          "changeCase": {
            "name": "змінити регістр",
            "description": "Перетворює текст у верхній або нижній регістр",
            "code": "текст.toUpperCase()\nтекст.toLowerCase()\nтекст.charAt(0).toUpperCase() + текст.slice(1)"
          },
          "trimText": {
            "name": "обрізати текст",
            "description": "Видаляє пробіли з обох сторін тексту",
            "code": "текст.trim()\nтекст.trimLeft()\nтекст.trimRight()"
          },
          "print": {
            "name": "друк",
            "description": "Виводить текст у консоль",
            "code": "console.log(текст);"
          },
          "prompt": {
            "name": "запит",
            "description": "Запитує у користувача текстовий ввід",
            "code": "prompt(\"Введіть текст:\")"
          }
        }
      }
    }
  
}